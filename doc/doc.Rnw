\documentclass[12pt, a4paper, oneside]{article}
\usepackage{hyperref}
\usepackage{amsmath}
\usepackage{multirow}
\usepackage{subcaption}
\usepackage{enumerate}

\newcommand\ci{\perp\!\!\!\perp}

% \usepackage{pdflscape}

% font size could be 10pt (default), 11pt or 12 pt
% paper size coulde be letterpaper (default), legalpaper, executivepaper,
% a4paper, a5paper or b5paper
% side coulde be oneside (default) or twoside 
% columns coulde be onecolumn (default) or twocolumn
% graphics coulde be final (default) or draft 
%
% titlepage coulde be notitlepage (default) or titlepage which 
% makes an extra page for title 
% 
% paper alignment coulde be portrait (default) or landscape 
%
% equations coulde be 
%   default number of the equation on the rigth and equation centered 
%   leqno number on the left and equation centered 
%   fleqn number on the rigth and  equation on the left side
%   
\title{MDM Assignment 2}
\author{Marco Vassena  \\
    4110161 \\
    \and 
    Philipp Hausmann \\
    4003373 \\
    }

\date{\today} 
\begin{document}

<<setup, echo=FALSE, cache=FALSE,include=FALSE>>=
source('../src/analysis.r', chdir=TRUE)
library(knitr)
library(xtable)
library(igraph)
# For answer (e) during lots of iterations, 
# loglin doesn't converge and prints warning messages (Warning: algorithm did not converge)
options(warn=-1)  
@

\maketitle

\tableofcontents


\section{Problem description}
The goal of this assignment is to implement and evaluate a tree classification algorithm.
In addition to that, we will also discuss two different implementation styles
and their performance implications.

\section{Analysis}


\begin{enumerate}[(a)]

%A
\item
The graph contains $10$ nodes, and there may or may not be an edge
between every node combination. The number of different graphical models
is therefore equal to ${10 \choose 2}$, which gives a value of $45$.

% R code: choose(10,2)

%B
\item
% http://www.cs.uu.nl/docs/vakken/mdm/Slides/dm-graphmod-1.pdf, slide 7
Parameters: $9 * 2^3 * 3 * 6 * 4 * 3 * 5 * 2$ which is $155520$ (or $155519$, as the probablities have to sum up to $1$)

length(table(d)): 155520

cells = length(table(...))
num\_params\_sat = cells - 1 (VERIFY)

%C
\item
The nodes have been numbered according to the following table:

\begin{table}
  \begin{center}
    \begin{tabular}{ | c | c | }
      \hline
      N & variable \\ \hline
      1 & cat1 \\ \hline
      2 & death \\ \hline
      3 & swang1 \\  \hline
      4 & gender \\ \hline
      5 & race \\ \hline
      6 & ninsclas \\ \hline
      7 & income \\ \hline
      8 & ca \\ \hline
      9 & age \\ \hline
      10 & meanbp1 \\ \hline
    \end{tabular}
    \caption{Numbering used to identify the variables of the model}
  \end{center}
\end{table}

<<answer-c,cache=TRUE,echo=FALSE>>=
rhc.graphmod.c <- answer.c()
@

% TODO maybe better table?
<<table-c,results='asis',cache=FALSE,echo=FALSE>>=
tbl <- xtable(clique.table(rhc.graphmod.c), 
              caption = "The cliques of the resulting model for question (c)",
              align = "cc")
print(tbl)
@

\begin{figure}
<<graph-c,fig.keep='high',cache=FALSE,echo=FALSE>>=
g.c <- from.cliques(rhc.graphmod.c$cliques)
plot.igraph(g.c, layout = layout.circle(g.c))
@
\caption{The independence graph for question (c)}
\end{figure}


%D
\item 
The Pairwaise Markov property states that any two non-adjacent variables are conditionally
independent given all the others.
Since variable node 4 (variable \emph{gender}) and node 7 (variable \emph{income}) 
are not adjacent (the edge $(4,7)$ is not present in the graph), we can conclude that:
\[ X_4 \ci X_7 | (X_1, X_2, X_3, X_5, X_6, X_7, X_8, X_9, X_{10})\] 

Using the Global Markov property we can derive a stronger statement.
Node 4 is separated from node 7 by node 6, because any path from 4 to 7 passes
through node 6, therefore \emph{gender} is independent from \emph{income} given
\emph{ninsclas} (6).

\[ X_4 \ci X_7 | X_6 \]

By the Local Markov property a variable, given its closed neighbourhood, its independent
from all remaining vertices. Therefore, in order to estimate the 
variable \emph{death} (2) (which determines whether someone survives), it is sufficient to
consider its adjacents variables: \emph{ca} (8), \emph{age} (9), \emph{meanbp1} (10).

%E
\item 
The model found starting from the saturated model (complete graph) is slightly worse 
than the model found starting from the independence model (empty graph).
% TODO I actually expected a bigger difference, check!
The BIC score of the model is 15851, whereas the BIC score of the model found in (c) is
15842. 
The model found in (e) contains more cliques than the model found (c), 
namely: $\{2, 7\}, \{3, 4\}, \{3, 9\}, \{5, 7\}, \{5, 9\}$.
However model (c) contains the following cliques, which are not included in (e):
$\{1,9\},\{3,6\},\{5,6\}$

Because of the additional nodes departing from 4 and 7 we can derive weaker independence statements
about \emph{income} and \emph{gender}, namely:
\[ X_4 \ci X_7 | (X_6, X_3) \]
\[ X_4 \ci X_7 | (X_2, X_5, X_6)\]

Also for predicting variable $X_2$ \emph{death} we need to consider a larger set of variables,
because its neighborhood includes also \emph{income} (7), in addition to \emph{ca} (8), 
\emph{age} (9), \emph{meanbp1} (10) as before.

We would like to point out that during the analysis, the IPF algorithm used in the hill-climbing
search, often failed to converge, producing therefore models of lower quality.

<<answer-e,cache=TRUE,echo=FALSE>>=
rhc.graphmod.e <- answer.e()
@

% TODO maybe better table?
<<table-e,results='asis',cache=FALSE,echo=FALSE>>=
tbl <- xtable(clique.table(rhc.graphmod.e), 
              caption = "The cliques of the resulting model for question (e)",
              align = "cc")
print(tbl)
@

\begin{figure}
<<graph-e,fig.keep='high',cache=FALSE,echo=FALSE>>=
g.e <- from.cliques(rhc.graphmod.e$cliques)
plot.igraph(g.e, layout = layout.circle(g.e))
@
\caption{The independence graph for question (e)}
\end{figure}

%F
\item
<<answer-f,cache=TRUE,echo=FALSE>>=
rhc.graphmod.f <- answer.f()
@
<<table-f-compl,results='asis',cache=FALSE,echo=FALSE>>=
tbl <- xtable(clique.table(rhc.graphmod.f$complete),
            caption = "The cliques of the resulting model for question (f), starting from the complete graph.",
            align = "cc")
print(tbl)
@
<<table-f-empty,results='asis',cache=FALSE,echo=FALSE>>=
tbl <- xtable(clique.table(rhc.graphmod.f$empty),
            caption = "The cliques of the resulting model for question (f), starting from the empty graph.",
            align = "cc")
print(tbl)
@
<<answer-f-scores,cache=FALSE,results='asis'>>=
print(rhc.graphmod.f$complete$score)
print(rhc.graphmod.f$empty$score)
@

empty-score: 14278.21
complete-score: 45560.05 (trace also shows that no edges were added/removed)

cliques and score

%G
\item
G: ([PH])

%H
\item

<<answer-h,cache=TRUE,echo=FALSE>>=
rhc.h <- search.params()
@
<<answer-h-tbl,cache=FALSE,results='asis',echo=FALSE>>=
etab <- eval_to_df(rhc.h)
#ctab <- with(etab, tapply(error, list(nmin, minLeaf), sum))
#digits <- c(0, rep(3, dim(ctab)[2]))
tab <- xtable(etab, caption = "TODO", label = "tbl:ans-h")
print(tab)
@

restarts: 20
forward + backward

\end{enumerate}

\begin{thebibliography}{1}

\bibitem{SPAM}
  Mark Hopkins, Erik Reeber, George Forman, Jaap Suermondt.
  \emph{SPAM E-mail Database}.
  Hewlett-Packard Labs, 1501 Page Mill Rd., 
  Palo Alto, CA 94304,
  June-July 1999.


\end{thebibliography}

\end{document}
